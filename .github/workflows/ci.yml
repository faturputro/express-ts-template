name: App CI/CD

on:
  push:
    tags:
      - 'v*'

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [20.x]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build Application
        run: npm run build

      - name: rsync
        uses: burnett01/rsync-deployments@5.1
        with:
          switches: -avzr --delete
          path: ./*
          remote_path: ${{ secrets.PROJECT_PATH }}
          remote_host: ${{ secrets.SSH_HOST }}
          remote_user: ${{ secrets.SSH_USERNAME }}
          remote_key: "${{ secrets.SSH_PRIVATE_KEY }}"

      - name: Set Ownership
        run: |
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > private_key.pem
          chmod 600 private_key.pem

          mkdir -p /home/runner/.ssh
          touch /home/runner/.ssh/known_hosts

          ssh-keygen -R ${{ secrets.SSH_HOST }} >> /home/runner/.ssh/known_hosts

          ssh -i private_key.pem -o StrictHostKeyChecking=no ${{ secrets.SSH_USERNAME }}@${{ secrets.SSH_HOST }} \
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: VPS Deploy
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            cd ${{ secrets.PROJECT_PATH }}
            export NVM_DIR=~/.nvm
            export APP_VERSION_HASH=$(git rev-parse --short HEAD)
            source ~/.nvm/nvm.sh
            npm install
            npm run build
            pm2 reload
      
      - name: Cleanup
        run: |
          rm -f ~/private_key.pem private_key.pem
